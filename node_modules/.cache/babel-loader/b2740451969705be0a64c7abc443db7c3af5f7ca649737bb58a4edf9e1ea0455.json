{"ast":null,"code":"var _jsxFileName = \"/Users/martynasdzindzeleta/WebstormProjects/HOMEWORK/src/pages/MessagesPage.js\",\n  _s = $RefreshSig$();\nimport React, { useState, useEffect } from 'react';\nimport { useParams } from 'react-router-dom';\nimport useStore from '../store/main';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst MessagePage = () => {\n  _s();\n  const {\n    userId\n  } = useParams();\n  const {\n    allUsers,\n    sendMessage\n  } = useStore(); // Assuming you have a method to send messages\n  const [messages, setMessages] = useState([]);\n  const [newMessage, setNewMessage] = useState('');\n  useEffect(() => {\n    // Get the user and their previous messages\n    const user = allUsers.find(user => user.id === parseInt(userId));\n    if (user) {\n      setMessages(user.messages || []); // Assuming each user has an array of messages\n    }\n  }, [userId, allUsers]);\n  const handleSend = () => {\n    if (newMessage.trim()) {\n      // Add the new message to the message list\n      setMessages(prevMessages => [...prevMessages, {\n        text: newMessage,\n        sender: 'You'\n      }]);\n\n      // Save the new message in the store or wherever you want to persist it\n      sendMessage(userId, newMessage);\n\n      // Clear the input field\n      setNewMessage('');\n    }\n  };\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"message-page\",\n    children: [/*#__PURE__*/_jsxDEV(\"h2\", {\n      children: \"Chat with User\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 34,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"messages-container\",\n      children: messages.length === 0 ? /*#__PURE__*/_jsxDEV(\"p\", {\n        children: \"No messages yet. Start chatting!\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 37,\n        columnNumber: 21\n      }, this) : /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"message-history\",\n        children: messages.map((message, index) => /*#__PURE__*/_jsxDEV(\"div\", {\n          className: `message ${message.sender === 'You' ? 'sent' : 'received'}`,\n          children: /*#__PURE__*/_jsxDEV(\"p\", {\n            children: message.text\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 42,\n            columnNumber: 33\n          }, this)\n        }, index, false, {\n          fileName: _jsxFileName,\n          lineNumber: 41,\n          columnNumber: 29\n        }, this))\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 39,\n        columnNumber: 21\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 35,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"message-input\",\n      children: [/*#__PURE__*/_jsxDEV(\"input\", {\n        type: \"text\",\n        value: newMessage,\n        onChange: e => setNewMessage(e.target.value),\n        placeholder: \"Type a message...\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 49,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n        onClick: handleSend,\n        children: \"Send\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 55,\n        columnNumber: 17\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 48,\n      columnNumber: 13\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 33,\n    columnNumber: 9\n  }, this);\n};\n_s(MessagePage, \"4TXDsbrpEGwmw16Olu485DBk2UE=\", false, function () {\n  return [useParams, useStore];\n});\n_c = MessagePage;\nexport default MessagePage;\nvar _c;\n$RefreshReg$(_c, \"MessagePage\");","map":{"version":3,"names":["React","useState","useEffect","useParams","useStore","jsxDEV","_jsxDEV","MessagePage","_s","userId","allUsers","sendMessage","messages","setMessages","newMessage","setNewMessage","user","find","id","parseInt","handleSend","trim","prevMessages","text","sender","className","children","fileName","_jsxFileName","lineNumber","columnNumber","length","map","message","index","type","value","onChange","e","target","placeholder","onClick","_c","$RefreshReg$"],"sources":["/Users/martynasdzindzeleta/WebstormProjects/HOMEWORK/src/pages/MessagesPage.js"],"sourcesContent":["import React, { useState, useEffect } from 'react';\nimport { useParams } from 'react-router-dom';\nimport useStore from '../store/main';\n\nconst MessagePage = () => {\n    const { userId } = useParams();\n    const { allUsers, sendMessage } = useStore(); // Assuming you have a method to send messages\n    const [messages, setMessages] = useState([]);\n    const [newMessage, setNewMessage] = useState('');\n\n    useEffect(() => {\n        // Get the user and their previous messages\n        const user = allUsers.find(user => user.id === parseInt(userId));\n        if (user) {\n            setMessages(user.messages || []); // Assuming each user has an array of messages\n        }\n    }, [userId, allUsers]);\n\n    const handleSend = () => {\n        if (newMessage.trim()) {\n            // Add the new message to the message list\n            setMessages(prevMessages => [...prevMessages, { text: newMessage, sender: 'You' }]);\n\n            // Save the new message in the store or wherever you want to persist it\n            sendMessage(userId, newMessage);\n\n            // Clear the input field\n            setNewMessage('');\n        }\n    };\n\n    return (\n        <div className=\"message-page\">\n            <h2>Chat with User</h2>\n            <div className=\"messages-container\">\n                {messages.length === 0 ? (\n                    <p>No messages yet. Start chatting!</p>\n                ) : (\n                    <div className=\"message-history\">\n                        {messages.map((message, index) => (\n                            <div key={index} className={`message ${message.sender === 'You' ? 'sent' : 'received'}`}>\n                                <p>{message.text}</p>\n                            </div>\n                        ))}\n                    </div>\n                )}\n            </div>\n            <div className=\"message-input\">\n                <input\n                    type=\"text\"\n                    value={newMessage}\n                    onChange={(e) => setNewMessage(e.target.value)}\n                    placeholder=\"Type a message...\"\n                />\n                <button onClick={handleSend}>Send</button>\n            </div>\n        </div>\n    );\n};\n\nexport default MessagePage;\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}