{"ast":null,"code":"import { create } from 'zustand';\nconst useStore = create(set => ({\n  username: '',\n  password1: '',\n  password2: '',\n  // Delete post action\n  deletePost: postId => set(state => ({\n    posts: state.posts.filter(post => post.id !== postId) // Remove the post by id\n  })),\n  // Action to update username, password1 and password2\n  setRegistrationData: (username, password1, password2) => set({\n    username,\n    password1,\n    password2\n  }),\n  // Store for posts, initialized as empty\n  posts: [],\n  // Add post action\n  addPost: (description, imageUrl) => set(state => ({\n    posts: [...state.posts, {\n      id: Date.now(),\n      // Unique id based on current timestamp\n      description,\n      imageUrl\n    }]\n  })),\n  // Store user data\n  setUserData: (username, profileImageUrl) => set({\n    userData: {\n      username,\n      profileImageUrl\n    }\n  })\n}));\nexport default useStore;\n\n//////////////// SAVE ALL DATA TO ZUSTATND","map":{"version":3,"names":["create","useStore","set","username","password1","password2","deletePost","postId","state","posts","filter","post","id","setRegistrationData","addPost","description","imageUrl","Date","now","setUserData","profileImageUrl","userData"],"sources":["/Users/martynasdzindzeleta/WebstormProjects/HOMEWORK/src/store/main.js"],"sourcesContent":["import { create } from 'zustand';\n\nconst useStore = create((set) => ({\n    username: '',\n    password1: '',\n    password2: '',\n\n    // Delete post action\n    deletePost: (postId) => set((state) => ({\n        posts: state.posts.filter((post) => post.id !== postId) // Remove the post by id\n    })),\n\n    // Action to update username, password1 and password2\n    setRegistrationData: (username, password1, password2) => set({ username, password1, password2 }),\n\n    // Store for posts, initialized as empty\n    posts: [],\n\n    // Add post action\n    addPost: (description, imageUrl) => set((state) => ({\n        posts: [\n            ...state.posts,\n            {\n                id: Date.now(), // Unique id based on current timestamp\n                description,\n                imageUrl\n            }\n        ]\n    })),\n\n    // Store user data\n    setUserData: (username, profileImageUrl) => set({ userData: { username, profileImageUrl } }),\n}));\n\nexport default useStore;\n\n\n\n//////////////// SAVE ALL DATA TO ZUSTATND"],"mappings":"AAAA,SAASA,MAAM,QAAQ,SAAS;AAEhC,MAAMC,QAAQ,GAAGD,MAAM,CAAEE,GAAG,KAAM;EAC9BC,QAAQ,EAAE,EAAE;EACZC,SAAS,EAAE,EAAE;EACbC,SAAS,EAAE,EAAE;EAEb;EACAC,UAAU,EAAGC,MAAM,IAAKL,GAAG,CAAEM,KAAK,KAAM;IACpCC,KAAK,EAAED,KAAK,CAACC,KAAK,CAACC,MAAM,CAAEC,IAAI,IAAKA,IAAI,CAACC,EAAE,KAAKL,MAAM,CAAC,CAAC;EAC5D,CAAC,CAAC,CAAC;EAEH;EACAM,mBAAmB,EAAEA,CAACV,QAAQ,EAAEC,SAAS,EAAEC,SAAS,KAAKH,GAAG,CAAC;IAAEC,QAAQ;IAAEC,SAAS;IAAEC;EAAU,CAAC,CAAC;EAEhG;EACAI,KAAK,EAAE,EAAE;EAET;EACAK,OAAO,EAAEA,CAACC,WAAW,EAAEC,QAAQ,KAAKd,GAAG,CAAEM,KAAK,KAAM;IAChDC,KAAK,EAAE,CACH,GAAGD,KAAK,CAACC,KAAK,EACd;MACIG,EAAE,EAAEK,IAAI,CAACC,GAAG,CAAC,CAAC;MAAE;MAChBH,WAAW;MACXC;IACJ,CAAC;EAET,CAAC,CAAC,CAAC;EAEH;EACAG,WAAW,EAAEA,CAAChB,QAAQ,EAAEiB,eAAe,KAAKlB,GAAG,CAAC;IAAEmB,QAAQ,EAAE;MAAElB,QAAQ;MAAEiB;IAAgB;EAAE,CAAC;AAC/F,CAAC,CAAC,CAAC;AAEH,eAAenB,QAAQ;;AAIvB","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}