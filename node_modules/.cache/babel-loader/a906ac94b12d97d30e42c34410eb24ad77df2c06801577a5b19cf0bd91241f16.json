{"ast":null,"code":"var _jsxFileName = \"/Users/martynasdzindzeleta/WebstormProjects/kasvyksta24/src/components/SinglePost.js\",\n  _s = $RefreshSig$();\nimport React, { useState, useEffect } from 'react';\nimport { useParams } from 'react-router-dom';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst SinglePost = () => {\n  _s();\n  const {\n    username,\n    id\n  } = useParams(); // Extract username and post id from URL params\n  const [post, setPost] = useState(null);\n  useEffect(() => {\n    // Fetch the single post using the username and id\n    fetch(`http://167.99.138.67:1111/getSinglePost/${username}/${id}`).then(res => res.json()).then(data => {\n      if (data.success) {\n        setPost(data.data); // Store the single post in state\n      } else {\n        console.error('Error fetching single post details');\n      }\n    }).catch(error => console.error(\"Error fetching data:\", error));\n  }, [username, id]);\n  if (!post) {\n    return /*#__PURE__*/_jsxDEV(\"p\", {\n      children: \"Loading post...\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 23,\n      columnNumber: 16\n    }, this);\n  }\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    children: [/*#__PURE__*/_jsxDEV(\"h1\", {\n      children: post.title\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 28,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(\"h3\", {\n      children: [\"By: \", post.username]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 29,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(\"img\", {\n      src: post.image,\n      alt: post.title,\n      className: \"post-image\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 30,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n      children: post.description\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 35,\n      columnNumber: 13\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 27,\n    columnNumber: 9\n  }, this);\n};\n_s(SinglePost, \"kKI4+3osC6CiveNxl0aNtt8PKhA=\", false, function () {\n  return [useParams];\n});\n_c = SinglePost;\nexport default SinglePost;\nvar _c;\n$RefreshReg$(_c, \"SinglePost\");","map":{"version":3,"names":["React","useState","useEffect","useParams","jsxDEV","_jsxDEV","SinglePost","_s","username","id","post","setPost","fetch","then","res","json","data","success","console","error","catch","children","fileName","_jsxFileName","lineNumber","columnNumber","title","src","image","alt","className","description","_c","$RefreshReg$"],"sources":["/Users/martynasdzindzeleta/WebstormProjects/kasvyksta24/src/components/SinglePost.js"],"sourcesContent":["import React, { useState, useEffect } from 'react';\nimport { useParams } from 'react-router-dom';\n\nconst SinglePost = () => {\n    const { username, id } = useParams();  // Extract username and post id from URL params\n    const [post, setPost] = useState(null);\n\n    useEffect(() => {\n        // Fetch the single post using the username and id\n        fetch(`http://167.99.138.67:1111/getSinglePost/${username}/${id}`)\n            .then((res) => res.json())\n            .then((data) => {\n                if (data.success) {\n                    setPost(data.data);  // Store the single post in state\n                } else {\n                    console.error('Error fetching single post details');\n                }\n            })\n            .catch((error) => console.error(\"Error fetching data:\", error));\n    }, [username, id]);\n\n    if (!post) {\n        return <p>Loading post...</p>;\n    }\n\n    return (\n        <div>\n            <h1>{post.title}</h1>\n            <h3>By: {post.username}</h3>\n            <img\n                src={post.image}\n                alt={post.title}\n                className=\"post-image\"\n            />\n            <p>{post.description}</p>\n        </div>\n    );\n};\n\nexport default SinglePost;\n"],"mappings":";;AAAA,OAAOA,KAAK,IAAIC,QAAQ,EAAEC,SAAS,QAAQ,OAAO;AAClD,SAASC,SAAS,QAAQ,kBAAkB;AAAC,SAAAC,MAAA,IAAAC,OAAA;AAE7C,MAAMC,UAAU,GAAGA,CAAA,KAAM;EAAAC,EAAA;EACrB,MAAM;IAAEC,QAAQ;IAAEC;EAAG,CAAC,GAAGN,SAAS,CAAC,CAAC,CAAC,CAAE;EACvC,MAAM,CAACO,IAAI,EAAEC,OAAO,CAAC,GAAGV,QAAQ,CAAC,IAAI,CAAC;EAEtCC,SAAS,CAAC,MAAM;IACZ;IACAU,KAAK,CAAC,2CAA2CJ,QAAQ,IAAIC,EAAE,EAAE,CAAC,CAC7DI,IAAI,CAAEC,GAAG,IAAKA,GAAG,CAACC,IAAI,CAAC,CAAC,CAAC,CACzBF,IAAI,CAAEG,IAAI,IAAK;MACZ,IAAIA,IAAI,CAACC,OAAO,EAAE;QACdN,OAAO,CAACK,IAAI,CAACA,IAAI,CAAC,CAAC,CAAE;MACzB,CAAC,MAAM;QACHE,OAAO,CAACC,KAAK,CAAC,oCAAoC,CAAC;MACvD;IACJ,CAAC,CAAC,CACDC,KAAK,CAAED,KAAK,IAAKD,OAAO,CAACC,KAAK,CAAC,sBAAsB,EAAEA,KAAK,CAAC,CAAC;EACvE,CAAC,EAAE,CAACX,QAAQ,EAAEC,EAAE,CAAC,CAAC;EAElB,IAAI,CAACC,IAAI,EAAE;IACP,oBAAOL,OAAA;MAAAgB,QAAA,EAAG;IAAe;MAAAC,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAAG,CAAC;EACjC;EAEA,oBACIpB,OAAA;IAAAgB,QAAA,gBACIhB,OAAA;MAAAgB,QAAA,EAAKX,IAAI,CAACgB;IAAK;MAAAJ,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAAK,CAAC,eACrBpB,OAAA;MAAAgB,QAAA,GAAI,MAAI,EAACX,IAAI,CAACF,QAAQ;IAAA;MAAAc,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAAK,CAAC,eAC5BpB,OAAA;MACIsB,GAAG,EAAEjB,IAAI,CAACkB,KAAM;MAChBC,GAAG,EAAEnB,IAAI,CAACgB,KAAM;MAChBI,SAAS,EAAC;IAAY;MAAAR,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OACzB,CAAC,eACFpB,OAAA;MAAAgB,QAAA,EAAIX,IAAI,CAACqB;IAAW;MAAAT,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAAI,CAAC;EAAA;IAAAH,QAAA,EAAAC,YAAA;IAAAC,UAAA;IAAAC,YAAA;EAAA,OACxB,CAAC;AAEd,CAAC;AAAClB,EAAA,CAlCID,UAAU;EAAA,QACaH,SAAS;AAAA;AAAA6B,EAAA,GADhC1B,UAAU;AAoChB,eAAeA,UAAU;AAAC,IAAA0B,EAAA;AAAAC,YAAA,CAAAD,EAAA","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}