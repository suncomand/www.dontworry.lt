{"ast":null,"code":"var _jsxFileName = \"/Users/martynasdzindzeleta/WebstormProjects/HOMEWORK/src/pages/User-listPage.js\",\n  _s = $RefreshSig$();\nimport React, { useState } from 'react';\nimport useStore from '../store/main';\nimport MessageModal from '../components/MessageModal'; // Assuming the modal is in a separate component\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst UserListPage = () => {\n  _s();\n  const {\n    allUsers\n  } = useStore();\n  const [isModalOpen, setIsModalOpen] = useState(false);\n  const [receiver, setReceiver] = useState('');\n  const openModal = username => {\n    setReceiver(username);\n    setIsModalOpen(true);\n  };\n  const closeModal = () => {\n    setIsModalOpen(false);\n    setReceiver('');\n  };\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"user-list-page\",\n    children: [/*#__PURE__*/_jsxDEV(\"h2\", {\n      children: \"All Users\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 22,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"user-list\",\n      children: allUsers.length === 0 ? /*#__PURE__*/_jsxDEV(\"p\", {\n        children: \"No users yet. Please add some!\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 25,\n        columnNumber: 21\n      }, this) : allUsers.map((user, index) => /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"user-box\",\n        children: /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"user-item\",\n          children: [/*#__PURE__*/_jsxDEV(\"img\", {\n            src: user.profileImageUrl,\n            alt: \"Profile\",\n            className: \"profile-image\",\n            style: {\n              width: '200px',\n              height: '200px',\n              borderRadius: '10%'\n            }\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 30,\n            columnNumber: 33\n          }, this), /*#__PURE__*/_jsxDEV(\"span\", {\n            children: [\"By: \", user.username]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 40,\n            columnNumber: 33\n          }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n            onClick: () => openModal(user.username),\n            children: \"Send message\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 41,\n            columnNumber: 33\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 29,\n          columnNumber: 29\n        }, this)\n      }, index, false, {\n        fileName: _jsxFileName,\n        lineNumber: 28,\n        columnNumber: 25\n      }, this))\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 23,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(MessageModal, {\n      isOpen: isModalOpen,\n      onClose: closeModal,\n      receiverUsername: receiver\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 49,\n      columnNumber: 13\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 21,\n    columnNumber: 9\n  }, this);\n};\n_s(UserListPage, \"QPtmOYe/P9Nm+wda4u0AfN8hn88=\", false, function () {\n  return [useStore];\n});\n_c = UserListPage;\nexport default UserListPage;\nvar _c;\n$RefreshReg$(_c, \"UserListPage\");","map":{"version":3,"names":["React","useState","useStore","MessageModal","jsxDEV","_jsxDEV","UserListPage","_s","allUsers","isModalOpen","setIsModalOpen","receiver","setReceiver","openModal","username","closeModal","className","children","fileName","_jsxFileName","lineNumber","columnNumber","length","map","user","index","src","profileImageUrl","alt","style","width","height","borderRadius","onClick","isOpen","onClose","receiverUsername","_c","$RefreshReg$"],"sources":["/Users/martynasdzindzeleta/WebstormProjects/HOMEWORK/src/pages/User-listPage.js"],"sourcesContent":["import React, { useState } from 'react';\nimport useStore from '../store/main';\nimport MessageModal from '../components/MessageModal'; // Assuming the modal is in a separate component\n\nconst UserListPage = () => {\n    const { allUsers } = useStore();\n    const [isModalOpen, setIsModalOpen] = useState(false);\n    const [receiver, setReceiver] = useState('');\n\n    const openModal = (username) => {\n        setReceiver(username);\n        setIsModalOpen(true);\n    };\n\n    const closeModal = () => {\n        setIsModalOpen(false);\n        setReceiver('');\n    };\n\n    return (\n        <div className=\"user-list-page\">\n            <h2>All Users</h2>\n            <div className=\"user-list\">\n                {allUsers.length === 0 ? (\n                    <p>No users yet. Please add some!</p>\n                ) : (\n                    allUsers.map((user, index) => (\n                        <div key={index} className=\"user-box\">\n                            <div className=\"user-item\">\n                                <img\n                                    src={user.profileImageUrl}\n                                    alt=\"Profile\"\n                                    className=\"profile-image\"\n                                    style={{\n                                        width: '200px',\n                                        height: '200px',\n                                        borderRadius: '10%',\n                                    }}\n                                />\n                                <span>By: {user.username}</span>\n                                <button onClick={() => openModal(user.username)}>Send message</button>\n                            </div>\n                        </div>\n                    ))\n                )}\n            </div>\n\n            {/* Message Modal */}\n            <MessageModal\n                isOpen={isModalOpen}\n                onClose={closeModal}\n                receiverUsername={receiver}\n            />\n        </div>\n    );\n};\n\nexport default UserListPage;\n\n\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}