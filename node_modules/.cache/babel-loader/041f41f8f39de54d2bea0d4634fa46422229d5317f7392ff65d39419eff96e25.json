{"ast":null,"code":"var _jsxFileName = \"/Users/martynasdzindzeleta/WebstormProjects/HOMEWORK/src/pages/MessagesPage.js\",\n  _s = $RefreshSig$();\nimport React, { useState, useEffect, useRef } from 'react';\nimport { useParams } from 'react-router-dom';\nimport useStore from '../store/main';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst MessagePage = () => {\n  _s();\n  var _allUsers$find;\n  const {\n    userId\n  } = useParams(); // Get the userId from the URL\n  const {\n    allUsers,\n    sendMessage,\n    setActiveUser\n  } = useStore();\n  const [messages, setMessages] = useState([]);\n  const [newMessage, setNewMessage] = useState('');\n\n  // Scroll to the bottom reference\n  const messagesEndRef = useRef(null);\n  useEffect(() => {\n    const user = allUsers.find(user => user.id === parseInt(userId));\n    if (user) {\n      setMessages(user.messages);\n    }\n  }, [userId, allUsers]);\n  useEffect(() => {\n    // Set the active user on page load (to make sure it's synced)\n    setActiveUser(parseInt(userId));\n  }, [userId, setActiveUser]);\n  useEffect(() => {\n    var _messagesEndRef$curre;\n    // Scroll to the bottom when new messages are added\n    (_messagesEndRef$curre = messagesEndRef.current) === null || _messagesEndRef$curre === void 0 ? void 0 : _messagesEndRef$curre.scrollIntoView({\n      behavior: 'smooth'\n    });\n  }, [messages]);\n  const handleSendMessage = () => {\n    if (newMessage.trim()) {\n      // Add new message to the store\n      sendMessage(parseInt(userId), newMessage);\n\n      // Update the message history in local state\n      setMessages(prevMessages => [...prevMessages, {\n        text: newMessage,\n        sender: 'You'\n      }]);\n\n      // Clear the input\n      setNewMessage('');\n    }\n  };\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"message-page\",\n    children: [/*#__PURE__*/_jsxDEV(\"h2\", {\n      children: [\"Chat with \", (_allUsers$find = allUsers.find(user => user.id === parseInt(userId))) === null || _allUsers$find === void 0 ? void 0 : _allUsers$find.username]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 49,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"messages-container\",\n      children: [messages.length === 0 ? /*#__PURE__*/_jsxDEV(\"p\", {\n        children: \"No messages yet. Start chatting!\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 52,\n        columnNumber: 21\n      }, this) : /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"message-history\",\n        children: messages.map((message, index) => /*#__PURE__*/_jsxDEV(\"div\", {\n          className: `message ${message.sender === 'You' ? 'sent' : 'received'}`,\n          children: /*#__PURE__*/_jsxDEV(\"p\", {\n            children: message.text\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 60,\n            columnNumber: 33\n          }, this)\n        }, index, false, {\n          fileName: _jsxFileName,\n          lineNumber: 56,\n          columnNumber: 29\n        }, this))\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 54,\n        columnNumber: 21\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        ref: messagesEndRef\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 66,\n        columnNumber: 17\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 50,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"message-input\",\n      children: [/*#__PURE__*/_jsxDEV(\"input\", {\n        type: \"text\",\n        value: newMessage,\n        onChange: e => setNewMessage(e.target.value),\n        placeholder: \"Type a message...\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 69,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n        onClick: handleSendMessage,\n        children: \"Send\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 75,\n        columnNumber: 17\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 68,\n      columnNumber: 13\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 48,\n    columnNumber: 9\n  }, this);\n};\n_s(MessagePage, \"65nNXp/F5VvRYnev+TugygIJgFY=\", false, function () {\n  return [useParams, useStore];\n});\n_c = MessagePage;\nexport default MessagePage;\nvar _c;\n$RefreshReg$(_c, \"MessagePage\");","map":{"version":3,"names":["React","useState","useEffect","useRef","useParams","useStore","jsxDEV","_jsxDEV","MessagePage","_s","_allUsers$find","userId","allUsers","sendMessage","setActiveUser","messages","setMessages","newMessage","setNewMessage","messagesEndRef","user","find","id","parseInt","_messagesEndRef$curre","current","scrollIntoView","behavior","handleSendMessage","trim","prevMessages","text","sender","className","children","username","fileName","_jsxFileName","lineNumber","columnNumber","length","map","message","index","ref","type","value","onChange","e","target","placeholder","onClick","_c","$RefreshReg$"],"sources":["/Users/martynasdzindzeleta/WebstormProjects/HOMEWORK/src/pages/MessagesPage.js"],"sourcesContent":["import React, { useState, useEffect, useRef } from 'react';\nimport { useParams } from 'react-router-dom';\nimport useStore from '../store/main';\n\nconst MessagePage = () => {\n    const { userId } = useParams(); // Get the userId from the URL\n    const { allUsers, sendMessage, setActiveUser } = useStore();\n    const [messages, setMessages] = useState([]);\n    const [newMessage, setNewMessage] = useState('');\n\n    // Scroll to the bottom reference\n    const messagesEndRef = useRef(null);\n\n    useEffect(() => {\n        const user = allUsers.find(user => user.id === parseInt(userId));\n        if (user) {\n            setMessages(user.messages);\n        }\n    }, [userId, allUsers]);\n\n    useEffect(() => {\n        // Set the active user on page load (to make sure it's synced)\n        setActiveUser(parseInt(userId));\n    }, [userId, setActiveUser]);\n\n    useEffect(() => {\n        // Scroll to the bottom when new messages are added\n        messagesEndRef.current?.scrollIntoView({ behavior: 'smooth' });\n    }, [messages]);\n\n    const handleSendMessage = () => {\n        if (newMessage.trim()) {\n            // Add new message to the store\n            sendMessage(parseInt(userId), newMessage);\n\n            // Update the message history in local state\n            setMessages(prevMessages => [\n                ...prevMessages,\n                { text: newMessage, sender: 'You' }\n            ]);\n\n            // Clear the input\n            setNewMessage('');\n        }\n    };\n\n    return (\n        <div className=\"message-page\">\n            <h2>Chat with {allUsers.find(user => user.id === parseInt(userId))?.username}</h2>\n            <div className=\"messages-container\">\n                {messages.length === 0 ? (\n                    <p>No messages yet. Start chatting!</p>\n                ) : (\n                    <div className=\"message-history\">\n                        {messages.map((message, index) => (\n                            <div\n                                key={index}\n                                className={`message ${message.sender === 'You' ? 'sent' : 'received'}`}\n                            >\n                                <p>{message.text}</p>\n                            </div>\n                        ))}\n                    </div>\n                )}\n                {/* This div will ensure scrolling to the bottom */}\n                <div ref={messagesEndRef} />\n            </div>\n            <div className=\"message-input\">\n                <input\n                    type=\"text\"\n                    value={newMessage}\n                    onChange={(e) => setNewMessage(e.target.value)}\n                    placeholder=\"Type a message...\"\n                />\n                <button onClick={handleSendMessage}>Send</button>\n            </div>\n        </div>\n    );\n};\n\nexport default MessagePage;\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}