{"ast":null,"code":"var _jsxFileName = \"/Users/martynasdzindzeleta/WebstormProjects/kasvyksta24/src/pages/GalleryPage.js\",\n  _s = $RefreshSig$();\nimport React, { useState, useEffect } from 'react';\nimport Toolbar from \"../components/Toolbar\"; // Assuming your Toolbar component is in the components folder\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst GalleryPage = () => {\n  _s();\n  const [photos, setPhotos] = useState([]);\n  useEffect(() => {\n    fetch('https://jsonplaceholder.typicode.com/photos').then(res => res.json()).then(data => {\n      console.log(data);\n      setPhotos(data);\n    });\n  }, []); // Empty dependency array, so this runs only once (on mount)\n\n  return (\n    /*#__PURE__*/\n    // You need to return JSX from the component\n    _jsxDEV(\"div\", {\n      children: [/*#__PURE__*/_jsxDEV(Toolbar, {\n        className: \"page-header d-flex align-items-center\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 18,\n        columnNumber: 13\n      }, this), /*#__PURE__*/_jsxDEV(\"h2\", {\n        children: \"Products\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 19,\n        columnNumber: 13\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        children: photos.map(photo => /*#__PURE__*/_jsxDEV(\"img\", {\n          src: photo.url,\n          alt: photo.title,\n          width: 100,\n          style: {\n            margin: \"10px\"\n          } // Optional: to add some spacing between images\n        }, photo.id, false, {\n          fileName: _jsxFileName,\n          lineNumber: 23,\n          columnNumber: 21\n        }, this))\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 21,\n        columnNumber: 13\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 17,\n      columnNumber: 9\n    }, this)\n  );\n};\n_s(GalleryPage, \"rNJeiEBnoDDbCNHI2MVPxiP450E=\");\n_c = GalleryPage;\nexport default GalleryPage;\nvar _c;\n$RefreshReg$(_c, \"GalleryPage\");","map":{"version":3,"names":["React","useState","useEffect","Toolbar","jsxDEV","_jsxDEV","GalleryPage","_s","photos","setPhotos","fetch","then","res","json","data","console","log","children","className","fileName","_jsxFileName","lineNumber","columnNumber","map","photo","src","url","alt","title","width","style","margin","id","_c","$RefreshReg$"],"sources":["/Users/martynasdzindzeleta/WebstormProjects/kasvyksta24/src/pages/GalleryPage.js"],"sourcesContent":["import React, { useState, useEffect } from 'react';\nimport Toolbar from \"../components/Toolbar\"; // Assuming your Toolbar component is in the components folder\n\nconst GalleryPage = () => {\n    const [photos, setPhotos] = useState([]);\n\n    useEffect(() => {\n        fetch('https://jsonplaceholder.typicode.com/photos')\n            .then((res) => res.json())\n            .then((data) => {\n                console.log(data);\n                setPhotos(data);\n            });\n    }, []); // Empty dependency array, so this runs only once (on mount)\n\n    return ( // You need to return JSX from the component\n        <div>\n            <Toolbar className=\"page-header d-flex align-items-center\" />\n            <h2>Products</h2>\n\n            <div>\n                {photos.map((photo) => (\n                    <img\n                        key={photo.id}\n                        src={photo.url}\n                        alt={photo.title}\n                        width={100}\n                        style={{ margin: \"10px\" }} // Optional: to add some spacing between images\n                    />\n                ))}\n            </div>\n        </div>\n    );\n};\n\nexport default GalleryPage;\n"],"mappings":";;AAAA,OAAOA,KAAK,IAAIC,QAAQ,EAAEC,SAAS,QAAQ,OAAO;AAClD,OAAOC,OAAO,MAAM,uBAAuB,CAAC,CAAC;AAAA,SAAAC,MAAA,IAAAC,OAAA;AAE7C,MAAMC,WAAW,GAAGA,CAAA,KAAM;EAAAC,EAAA;EACtB,MAAM,CAACC,MAAM,EAAEC,SAAS,CAAC,GAAGR,QAAQ,CAAC,EAAE,CAAC;EAExCC,SAAS,CAAC,MAAM;IACZQ,KAAK,CAAC,6CAA6C,CAAC,CAC/CC,IAAI,CAAEC,GAAG,IAAKA,GAAG,CAACC,IAAI,CAAC,CAAC,CAAC,CACzBF,IAAI,CAAEG,IAAI,IAAK;MACZC,OAAO,CAACC,GAAG,CAACF,IAAI,CAAC;MACjBL,SAAS,CAACK,IAAI,CAAC;IACnB,CAAC,CAAC;EACV,CAAC,EAAE,EAAE,CAAC,CAAC,CAAC;;EAER;IAAA;IAAS;IACLT,OAAA;MAAAY,QAAA,gBACIZ,OAAA,CAACF,OAAO;QAACe,SAAS,EAAC;MAAuC;QAAAC,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OAAE,CAAC,eAC7DjB,OAAA;QAAAY,QAAA,EAAI;MAAQ;QAAAE,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OAAI,CAAC,eAEjBjB,OAAA;QAAAY,QAAA,EACKT,MAAM,CAACe,GAAG,CAAEC,KAAK,iBACdnB,OAAA;UAEIoB,GAAG,EAAED,KAAK,CAACE,GAAI;UACfC,GAAG,EAAEH,KAAK,CAACI,KAAM;UACjBC,KAAK,EAAE,GAAI;UACXC,KAAK,EAAE;YAAEC,MAAM,EAAE;UAAO,CAAE,CAAC;QAAA,GAJtBP,KAAK,CAACQ,EAAE;UAAAb,QAAA,EAAAC,YAAA;UAAAC,UAAA;UAAAC,YAAA;QAAA,OAKhB,CACJ;MAAC;QAAAH,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OACD,CAAC;IAAA;MAAAH,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OACL;EAAC;AAEd,CAAC;AAACf,EAAA,CA9BID,WAAW;AAAA2B,EAAA,GAAX3B,WAAW;AAgCjB,eAAeA,WAAW;AAAC,IAAA2B,EAAA;AAAAC,YAAA,CAAAD,EAAA","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}