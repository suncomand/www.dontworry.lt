{"ast":null,"code":"var _jsxFileName = \"/Users/martynasdzindzeleta/WebstormProjects/HOMEWORK/src/pages/PostsPage.js\",\n  _s = $RefreshSig$();\nimport React, { useEffect, useState } from 'react';\nimport { useParams } from 'react-router-dom';\nimport Toolbar from \"../components/Toolbar\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst PostsPage = () => {\n  _s();\n  const {\n    id\n  } = useParams(); // Extract the 'id' from the URL\n  const [post, setPost] = useState(null); // Rename state variable to 'post'\n\n  useEffect(() => {\n    // Fetch post details based on the ID\n    fetch(`https://jsonplaceholder.typicode.com/posts/${id}`).then(response => response.json()).then(data => {\n      setPost(data); // Store fetched data in 'post' state\n    }).catch(error => {\n      console.error('Error fetching post details:', error);\n    });\n  }, [id]); // Re-fetch data when the 'id' changes\n\n  // Show loading or error message if post is not found\n  if (!post) {\n    return /*#__PURE__*/_jsxDEV(\"p\", {\n      children: \"Loading post...\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 23,\n      columnNumber: 16\n    }, this);\n  }\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"text-center d-flex flex-column align-items-center\",\n    children: [/*#__PURE__*/_jsxDEV(\"h2\", {\n      children: /*#__PURE__*/_jsxDEV(Toolbar, {}, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 29,\n        columnNumber: 17\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 28,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"main-user-card d-flex flex-row align-items-center user-cont\",\n      children: /*#__PURE__*/_jsxDEV(\"div\", {\n        children: /*#__PURE__*/_jsxDEV(\"div\", {\n          children: [/*#__PURE__*/_jsxDEV(\"p\", {\n            children: [/*#__PURE__*/_jsxDEV(\"strong\", {\n              children: \"Title:\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 34,\n              columnNumber: 28\n            }, this), \" \", post.title]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 34,\n            columnNumber: 25\n          }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n            children: [/*#__PURE__*/_jsxDEV(\"strong\", {\n              children: \"Body:\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 35,\n              columnNumber: 28\n            }, this), \" \", post.body]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 35,\n            columnNumber: 25\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 33,\n          columnNumber: 21\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 32,\n        columnNumber: 17\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 31,\n      columnNumber: 13\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 27,\n    columnNumber: 9\n  }, this);\n};\n_s(PostsPage, \"6+b5eOm0C2EIwwbuXxVLhmPamew=\", false, function () {\n  return [useParams];\n});\n_c = PostsPage;\nexport default PostsPage;\nvar _c;\n$RefreshReg$(_c, \"PostsPage\");","map":{"version":3,"names":["React","useEffect","useState","useParams","Toolbar","jsxDEV","_jsxDEV","PostsPage","_s","id","post","setPost","fetch","then","response","json","data","catch","error","console","children","fileName","_jsxFileName","lineNumber","columnNumber","className","title","body","_c","$RefreshReg$"],"sources":["/Users/martynasdzindzeleta/WebstormProjects/HOMEWORK/src/pages/PostsPage.js"],"sourcesContent":["import React, { useEffect, useState } from 'react';\nimport { useParams } from 'react-router-dom';\nimport Toolbar from \"../components/Toolbar\";\n\nconst PostsPage = () => {\n    const { id } = useParams(); // Extract the 'id' from the URL\n    const [post, setPost] = useState(null); // Rename state variable to 'post'\n\n    useEffect(() => {\n        // Fetch post details based on the ID\n        fetch(`https://jsonplaceholder.typicode.com/posts/${id}`)\n            .then(response => response.json())\n            .then(data => {\n                setPost(data); // Store fetched data in 'post' state\n            })\n            .catch(error => {\n                console.error('Error fetching post details:', error);\n            });\n    }, [id]); // Re-fetch data when the 'id' changes\n\n    // Show loading or error message if post is not found\n    if (!post) {\n        return <p>Loading post...</p>;\n    }\n\n    return (\n        <div className=\"text-center d-flex flex-column align-items-center\">\n            <h2>\n                <Toolbar />\n            </h2>\n            <div className=\"main-user-card d-flex flex-row align-items-center user-cont\">\n                <div>\n                    <div>\n                        <p><strong>Title:</strong> {post.title}</p>\n                        <p><strong>Body:</strong> {post.body}</p>\n                    </div>\n                </div>\n            </div>\n        </div>\n    );\n};\n\nexport default PostsPage;\n\n"],"mappings":";;AAAA,OAAOA,KAAK,IAAIC,SAAS,EAAEC,QAAQ,QAAQ,OAAO;AAClD,SAASC,SAAS,QAAQ,kBAAkB;AAC5C,OAAOC,OAAO,MAAM,uBAAuB;AAAC,SAAAC,MAAA,IAAAC,OAAA;AAE5C,MAAMC,SAAS,GAAGA,CAAA,KAAM;EAAAC,EAAA;EACpB,MAAM;IAAEC;EAAG,CAAC,GAAGN,SAAS,CAAC,CAAC,CAAC,CAAC;EAC5B,MAAM,CAACO,IAAI,EAAEC,OAAO,CAAC,GAAGT,QAAQ,CAAC,IAAI,CAAC,CAAC,CAAC;;EAExCD,SAAS,CAAC,MAAM;IACZ;IACAW,KAAK,CAAC,8CAA8CH,EAAE,EAAE,CAAC,CACpDI,IAAI,CAACC,QAAQ,IAAIA,QAAQ,CAACC,IAAI,CAAC,CAAC,CAAC,CACjCF,IAAI,CAACG,IAAI,IAAI;MACVL,OAAO,CAACK,IAAI,CAAC,CAAC,CAAC;IACnB,CAAC,CAAC,CACDC,KAAK,CAACC,KAAK,IAAI;MACZC,OAAO,CAACD,KAAK,CAAC,8BAA8B,EAAEA,KAAK,CAAC;IACxD,CAAC,CAAC;EACV,CAAC,EAAE,CAACT,EAAE,CAAC,CAAC,CAAC,CAAC;;EAEV;EACA,IAAI,CAACC,IAAI,EAAE;IACP,oBAAOJ,OAAA;MAAAc,QAAA,EAAG;IAAe;MAAAC,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAAG,CAAC;EACjC;EAEA,oBACIlB,OAAA;IAAKmB,SAAS,EAAC,mDAAmD;IAAAL,QAAA,gBAC9Dd,OAAA;MAAAc,QAAA,eACId,OAAA,CAACF,OAAO;QAAAiB,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OAAE;IAAC;MAAAH,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OACX,CAAC,eACLlB,OAAA;MAAKmB,SAAS,EAAC,6DAA6D;MAAAL,QAAA,eACxEd,OAAA;QAAAc,QAAA,eACId,OAAA;UAAAc,QAAA,gBACId,OAAA;YAAAc,QAAA,gBAAGd,OAAA;cAAAc,QAAA,EAAQ;YAAM;cAAAC,QAAA,EAAAC,YAAA;cAAAC,UAAA;cAAAC,YAAA;YAAA,OAAQ,CAAC,KAAC,EAACd,IAAI,CAACgB,KAAK;UAAA;YAAAL,QAAA,EAAAC,YAAA;YAAAC,UAAA;YAAAC,YAAA;UAAA,OAAI,CAAC,eAC3ClB,OAAA;YAAAc,QAAA,gBAAGd,OAAA;cAAAc,QAAA,EAAQ;YAAK;cAAAC,QAAA,EAAAC,YAAA;cAAAC,UAAA;cAAAC,YAAA;YAAA,OAAQ,CAAC,KAAC,EAACd,IAAI,CAACiB,IAAI;UAAA;YAAAN,QAAA,EAAAC,YAAA;YAAAC,UAAA;YAAAC,YAAA;UAAA,OAAI,CAAC;QAAA;UAAAH,QAAA,EAAAC,YAAA;UAAAC,UAAA;UAAAC,YAAA;QAAA,OACxC;MAAC;QAAAH,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OACL;IAAC;MAAAH,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OACL,CAAC;EAAA;IAAAH,QAAA,EAAAC,YAAA;IAAAC,UAAA;IAAAC,YAAA;EAAA,OACL,CAAC;AAEd,CAAC;AAAChB,EAAA,CApCID,SAAS;EAAA,QACIJ,SAAS;AAAA;AAAAyB,EAAA,GADtBrB,SAAS;AAsCf,eAAeA,SAAS;AAAC,IAAAqB,EAAA;AAAAC,YAAA,CAAAD,EAAA","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}