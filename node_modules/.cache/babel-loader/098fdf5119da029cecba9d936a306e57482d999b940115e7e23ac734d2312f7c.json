{"ast":null,"code":"var _jsxFileName = \"/Users/martynasdzindzeleta/WebstormProjects/kasvyksta24/src/pages/ProfilePage.js\",\n  _s = $RefreshSig$();\nimport React, { useState, useEffect } from 'react';\nimport { useParams } from 'react-router-dom';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst ProfilePage = () => {\n  _s();\n  const {\n    id\n  } = useParams(); // The 'id' is actually the username here\n  const [posts, setPosts] = useState([]);\n  useEffect(() => {\n    // Fetch posts for the specific user (using username 'id')\n    fetch(`http://167.99.138.67:1111/getUserPosts/username/${id}`).then(res => res.json()).then(data => {\n      if (data.success) {\n        setPosts(data.data); // Store the posts for that user\n      } else {\n        console.error('Error fetching posts for user');\n      }\n    }).catch(error => console.error(\"Error fetching data:\", error));\n  }, [id]); // Only re-fetch if 'id' changes\n\n  if (posts.length === 0) {\n    return /*#__PURE__*/_jsxDEV(\"p\", {\n      children: \"Loading posts...\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 23,\n      columnNumber: 16\n    }, this);\n  }\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    children: [/*#__PURE__*/_jsxDEV(\"h1\", {\n      children: [\"Posts by \", id]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 28,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"post-details-page\",\n      children: posts.map(post => /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"post-card\",\n        children: [/*#__PURE__*/_jsxDEV(\"h3\", {\n          children: post.title\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 32,\n          columnNumber: 25\n        }, this), /*#__PURE__*/_jsxDEV(\"h4\", {\n          children: [\"By: \", post.username]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 33,\n          columnNumber: 25\n        }, this), /*#__PURE__*/_jsxDEV(\"img\", {\n          src: post.image,\n          alt: post.title,\n          className: \"post-image\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 34,\n          columnNumber: 25\n        }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n          children: post.description\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 39,\n          columnNumber: 25\n        }, this)]\n      }, post.id, true, {\n        fileName: _jsxFileName,\n        lineNumber: 31,\n        columnNumber: 21\n      }, this))\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 29,\n      columnNumber: 13\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 27,\n    columnNumber: 9\n  }, this);\n};\n_s(ProfilePage, \"fRDWBHegtUfViYpk0MywkddTNMI=\", false, function () {\n  return [useParams];\n});\n_c = ProfilePage;\nexport default ProfilePage;\nvar _c;\n$RefreshReg$(_c, \"ProfilePage\");","map":{"version":3,"names":["React","useState","useEffect","useParams","jsxDEV","_jsxDEV","ProfilePage","_s","id","posts","setPosts","fetch","then","res","json","data","success","console","error","catch","length","children","fileName","_jsxFileName","lineNumber","columnNumber","className","map","post","title","username","src","image","alt","description","_c","$RefreshReg$"],"sources":["/Users/martynasdzindzeleta/WebstormProjects/kasvyksta24/src/pages/ProfilePage.js"],"sourcesContent":["import React, { useState, useEffect } from 'react';\nimport { useParams } from 'react-router-dom';\n\nconst ProfilePage = () => {\n    const { id } = useParams(); // The 'id' is actually the username here\n    const [posts, setPosts] = useState([]);\n\n    useEffect(() => {\n        // Fetch posts for the specific user (using username 'id')\n        fetch(`http://167.99.138.67:1111/getUserPosts/username/${id}`)\n            .then((res) => res.json())\n            .then((data) => {\n                if (data.success) {\n                    setPosts(data.data);  // Store the posts for that user\n                } else {\n                    console.error('Error fetching posts for user');\n                }\n            })\n            .catch((error) => console.error(\"Error fetching data:\", error));\n    }, [id]); // Only re-fetch if 'id' changes\n\n    if (posts.length === 0) {\n        return <p>Loading posts...</p>;\n    }\n\n    return (\n        <div>\n            <h1>Posts by {id}</h1>\n            <div className=\"post-details-page\">\n                {posts.map((post) => (\n                    <div key={post.id} className=\"post-card\">\n                        <h3>{post.title}</h3>\n                        <h4>By: {post.username}</h4>\n                        <img\n                            src={post.image}\n                            alt={post.title}\n                            className=\"post-image\"\n                        />\n                        <p>{post.description}</p>\n                    </div>\n                ))}\n            </div>\n        </div>\n    );\n};\n\nexport default ProfilePage;\n"],"mappings":";;AAAA,OAAOA,KAAK,IAAIC,QAAQ,EAAEC,SAAS,QAAQ,OAAO;AAClD,SAASC,SAAS,QAAQ,kBAAkB;AAAC,SAAAC,MAAA,IAAAC,OAAA;AAE7C,MAAMC,WAAW,GAAGA,CAAA,KAAM;EAAAC,EAAA;EACtB,MAAM;IAAEC;EAAG,CAAC,GAAGL,SAAS,CAAC,CAAC,CAAC,CAAC;EAC5B,MAAM,CAACM,KAAK,EAAEC,QAAQ,CAAC,GAAGT,QAAQ,CAAC,EAAE,CAAC;EAEtCC,SAAS,CAAC,MAAM;IACZ;IACAS,KAAK,CAAC,mDAAmDH,EAAE,EAAE,CAAC,CACzDI,IAAI,CAAEC,GAAG,IAAKA,GAAG,CAACC,IAAI,CAAC,CAAC,CAAC,CACzBF,IAAI,CAAEG,IAAI,IAAK;MACZ,IAAIA,IAAI,CAACC,OAAO,EAAE;QACdN,QAAQ,CAACK,IAAI,CAACA,IAAI,CAAC,CAAC,CAAE;MAC1B,CAAC,MAAM;QACHE,OAAO,CAACC,KAAK,CAAC,+BAA+B,CAAC;MAClD;IACJ,CAAC,CAAC,CACDC,KAAK,CAAED,KAAK,IAAKD,OAAO,CAACC,KAAK,CAAC,sBAAsB,EAAEA,KAAK,CAAC,CAAC;EACvE,CAAC,EAAE,CAACV,EAAE,CAAC,CAAC,CAAC,CAAC;;EAEV,IAAIC,KAAK,CAACW,MAAM,KAAK,CAAC,EAAE;IACpB,oBAAOf,OAAA;MAAAgB,QAAA,EAAG;IAAgB;MAAAC,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAAG,CAAC;EAClC;EAEA,oBACIpB,OAAA;IAAAgB,QAAA,gBACIhB,OAAA;MAAAgB,QAAA,GAAI,WAAS,EAACb,EAAE;IAAA;MAAAc,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAAK,CAAC,eACtBpB,OAAA;MAAKqB,SAAS,EAAC,mBAAmB;MAAAL,QAAA,EAC7BZ,KAAK,CAACkB,GAAG,CAAEC,IAAI,iBACZvB,OAAA;QAAmBqB,SAAS,EAAC,WAAW;QAAAL,QAAA,gBACpChB,OAAA;UAAAgB,QAAA,EAAKO,IAAI,CAACC;QAAK;UAAAP,QAAA,EAAAC,YAAA;UAAAC,UAAA;UAAAC,YAAA;QAAA,OAAK,CAAC,eACrBpB,OAAA;UAAAgB,QAAA,GAAI,MAAI,EAACO,IAAI,CAACE,QAAQ;QAAA;UAAAR,QAAA,EAAAC,YAAA;UAAAC,UAAA;UAAAC,YAAA;QAAA,OAAK,CAAC,eAC5BpB,OAAA;UACI0B,GAAG,EAAEH,IAAI,CAACI,KAAM;UAChBC,GAAG,EAAEL,IAAI,CAACC,KAAM;UAChBH,SAAS,EAAC;QAAY;UAAAJ,QAAA,EAAAC,YAAA;UAAAC,UAAA;UAAAC,YAAA;QAAA,OACzB,CAAC,eACFpB,OAAA;UAAAgB,QAAA,EAAIO,IAAI,CAACM;QAAW;UAAAZ,QAAA,EAAAC,YAAA;UAAAC,UAAA;UAAAC,YAAA;QAAA,OAAI,CAAC;MAAA,GARnBG,IAAI,CAACpB,EAAE;QAAAc,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OASZ,CACR;IAAC;MAAAH,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OACD,CAAC;EAAA;IAAAH,QAAA,EAAAC,YAAA;IAAAC,UAAA;IAAAC,YAAA;EAAA,OACL,CAAC;AAEd,CAAC;AAAClB,EAAA,CAzCID,WAAW;EAAA,QACEH,SAAS;AAAA;AAAAgC,EAAA,GADtB7B,WAAW;AA2CjB,eAAeA,WAAW;AAAC,IAAA6B,EAAA;AAAAC,YAAA,CAAAD,EAAA","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}